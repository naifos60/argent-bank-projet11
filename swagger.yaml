swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: transaction API
      description: API for fetching transactions
      parameters:
        - in: path
          name: accountId
          description: unique ID of account 
          required: true
          type: string
      responses:
        '200':
          description: Transactions for account retrieved successully
          schema:
            $ref: '#/definitions/accountApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /transactions/{accountId}/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: transaction API
      description: API for update category in transaction
      parameters:
        - in: path
          name: accountId
          description: unique ID of account 
          required: true
          type: string
        - in: path
          name: transactionId
          description: unique ID of transaction 
          required: true
          type: string
        - in: body
          name: body
          description: select category for this transaction 
          required: true
          schema:
            $ref: '#/definitions/TransactionCategory'
      responses:
        '200':
          description: Category for transaction update successully
          schema:
            $ref: '#/definitions/CategoryApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized Accès
        '403':
          description: Forbidden Accès
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /transactions/{accountId}/{transactionId}/note:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: transaction API
      description: API for update note in transaction
      parameters:
        - in: path
          name: accountId
          description: unique ID of account 
          required: true
          type: string
        - in: path
          name: transactionId
          description: unique ID of transaction 
          required: true
          type: string
        - in: body
          name: body
          description: write a note for this transaction 
          required: true
          schema:
            $ref: '#/definitions/TransactionNote'
      responses:
        '200':
          description: Note update successully
          schema:
            $ref: '#/definitions/NoteApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized Accès
        '403':
          description: Forbidden Accès
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  TransactionCategory:
    properties:
      category:
        type: string
  TransactionNote:
    properties:
      note:
        type: string

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  accountApiResponse:
    type: object
    properties:
       transactions:
         type: object
  CategoryApiResponse:
    type: object
    properties:
      status:
        type: number
      message: 
        type: string
      category:
        type: string
  NoteApiResponse:
    type: object
    properties:
      status:
        type: number
      message: 
        type: string
      note:
        type: string